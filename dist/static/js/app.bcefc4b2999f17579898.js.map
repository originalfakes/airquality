{"version":3,"sources":["webpack:///./src/App.vue?9081","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///src/components/search.vue","webpack:///./src/components/search.vue?662b","webpack:///./src/components/search.vue","webpack:///../node_modules/vue-alertify/es/index.js","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///../node_modules/alertifyjs/build/alertify.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticStyle","text-align","_v","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","data","ssrContext","search","site","area","info","time","AQI","O3_8hrs","O3","PM25_AVG","PM25","PM10_AVG","PM10","CO_8hrs","CO","SO2","NO2","created","xhttp","XMLHttpRequest","that","onreadystatechange","readyState","status","JSON","parse","responseText","open","send","computed","AQI_status","methods","selectArea","document","getElementById","style","display","value","i","querySelectorAll","selectedIndex","selectSite","index","console","log","$alertify","error","length","SiteName","querySelector","PublishTime","O3_8hr","CO_8hr","getAQI","components_search","_vm","staticClass","_m","on","change","$event","disabled","selected","type","click","_s","font-size","font-weight","color","margin-left","class","rowspan","src_components_search","search_normalizeComponent","VueAlertify","loadCSSIfNotAlreadyLoaded","href","ss","styleSheets","max","link","createElement","rel","getElementsByTagName","appendChild","install","Vue","options","Object","assign","alertify_default","a","defaults","defineProperty","prototype","get","success","text","warning","message","alert","cb","alertWithTitle","title","confirm","ok","cancel","confirmWithTitle","prompt","defaultValue","promptWithTitle","window","es","vue_esm","use","vue_router_esm","router","routes","path","component","config","productionTip","el","components","App","template","__WEBPACK_AMD_DEFINE_RESULT__","keys","ENTER","ESC","F1","F12","LEFT","RIGHT","autoReset","basic","closable","closableByDimmer","frameless","maintainFocus","maximizable","modal","movable","moveBounded","overflow","padding","pinnable","pinned","preventBodyShift","resizable","startMaximized","transition","notifier","delay","position","closeButton","glossary","acccpt","deny","decline","close","maximize","restore","theme","input","openDialogs","addClass","element","classNames","className","removeClass","original","split","toBeRemoved","x","indexOf","splice","join","isRightToLeft","getComputedStyle","body","direction","getScrollTop","documentElement","scrollTop","getScrollLeft","scrollLeft","clearContents","lastChild","removeChild","copy","src","cpy","Array","isArray","push","Date","getTime","RegExp","source","global","ignoreCase","multiline","lastIndex","prop","hasOwnProperty","destruct","instance","initialize","root","elements","parentNode","settings","__settings","__init","__internal","addEventListener","event","fn","useCapture","attachEvent","off","removeEventListener","detachEvent","t","supported","transitions","animation","OAnimation","msAnimation","MozAnimation","WebkitAnimation","undefined","delegate","context","method","arguments","args","apply","createCloseEvent","button","dispatchEvent","eventType","call","dialog","scrollX","scrollY","usedKeys","tabindex","isSafari","navigator","userAgent","templates","dimmer","reset","commands","header","content","footer","buttons","primary","auxiliary","resizeHandle","classes","animationIn","animationOut","base","capture","fixed","hidden","maximized","modeless","noSelection","noOverflow","noPadding","pin","prefix","shake","unpinned","setup","focus","select","hooks","buttonsDefinition","b","ref","internal","isOpen","activeElement","timerIn","timerOut","onshow","onclosing","onclose","onfocus","onmove","onmoved","onresize","onresized","onmaximize","onmaximized","onrestore","onrestored","resetHandler","beginMoveHandler","beginResizeHandler","bringToFrontHandler","modalClickHandler","buttonsClickHandler","commandsClickHandler","transitionInHandler","transitionOutHandler","destroy","innerHTML","firstChild","container","nextSibling","buttonTemplate","key","cloneNode","setAttribute","scope","opKey","onReset","beginMove","beginResize","bringToFront","handleTransitionInEvent","handleTransitionOutEvent","set","alertify","build","restoreScrollPosition","scrollTo","ensureNoOverflow","requiresNoOverflow","isModal","isMaximized","top","topScroll","add","scrollHeight","clientHeight","setFocus","optionUpdated","option","oldValue","newValue","setHeader","unbindModelessEvents","updateAbsPositionFix","bindModelessEvents","updateDisplayMode","updateBasicMode","updateFramelessMode","removeAbsPositionFix","addAbsPositionFix","updatePinned","bindClosableEvents","unbindClosableEvents","updateClosable","updateMaximizable","updatePinnable","bindMovableEvents","resetMove","unbindMovableEvents","updateMovable","bindResizableEvents","resetResize","unbindResizableEvents","updateResizable","offsetWidth","updateTransition","onupdate","update","obj","callback","old","result","op","items","found","Error","triggerClose","triggerCallback","invokeOnClose","srcElement","target","isPinned","unpin","marginTop","marginLeft","marginRight","parseInt","left","cancelClick","cancelKeyup","check","idx","closeEvent","keyupHandler","keyCode","keydownHandler","preventDefault","stopPropagation","resetTarget","lastResetElement","clearTimeout","offsetX","offsetY","xProp","yProp","bounds","refreshTop","moveDelegate","moveElement","moveElementBounded","Math","min","maxLeft","minLeft","maxTop","minTop","eventSrc","targetTouches","current","offsetLeft","offsetTop","offsetParent","move","endMove","startingLeft","Number","Nan","startingWidth","minWidth","handleOffset","offsetHeight","height","minHeight","width","maxWidth","resize","pageRelative","X","Y","pageX","pageY","clientX","clientY","isRTL","isNaN","diff","abs","resizeElement","endResize","windowResize","moveTo","y","resizeTo","w","parseFloat","h","regex","match","clientWidth","setting","self","k","o","n","settingUpdated","item","HTMLElement","setContent","showModal","show","setTimeout","hasAttribute","prepare","removeAttribute","closeOthers","closeAll","openInstances","right","bottom","center","visible","updatePosition","create","div","clickDelegate","getAttribute","dismiss","transitionDone","clearTimers","timer","transitionTimeout","_content","_wait","pushed","wait","insertBefore","clickHandler","ondismiss","clicked","transitionEndHandler","dismissOthers","dismissAll","except","clone","slice","dialogs","extend","sub","get_dialog","Factory","transient","definition","factory","register","notify","main","_title","_message","_onok","onok","setMessage","label","returnValue","autoConfirm","duration","task","clearAutoConfirm","clearInterval","startAutoConfirm","setInterval","_oncancel","oncancel","labels","defaultFocus","reverseButtons","autoOk","autoCancel","p","_value","module","exports"],"mappings":"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","file":"static/js/app.bcefc4b2999f17579898.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',{staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"title\"}},[_vm._v(\"空氣品質指標查詢(AQI)\")]),_vm._v(\" \"),_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3e8400ee\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3e8400ee\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3e8400ee\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <!--<img src=\"./assets/logo.png\">-->\n    <h1 id=\"title\" style=\"text-align: center;\">空氣品質指標查詢(AQI)</h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Microsoft JhengHei;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-size: 20px;\n  color: #2c3e50;\n  margin-top: 30px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n  <div class=\"container\">\n    <div class=\"instruction\" style=\"text-align: center;\">\n      <h2>點擊下方下拉式選單查詢</h2>\n    </div>\n    <div class=\"district\">\n    <span id=\"unit\">\n      所屬單位: \n      <select id=\"subUnit\" name=\"environment\">\n        <option value=\"environment\">環保署</option>\n      </select>\n    </span>\n    <span class=\"area\">\n      地區:\n      <select id=\"ddl_Area\" @change=\"selectArea()\">\n        <option disabled selected></option>\n        <option value=\"North\">北部</option>\n        <option value=\"Chu-Miao\">竹苗</option>\n        <option value=\"Central\">中部</option>\n        <option value=\"Yun-Chia-Nan\">雲嘉南</option>\n        <option value=\"KaoPing\">高屏</option>\n        <option value=\"Yilan\">宜蘭</option>\n        <option value=\"Hua-Tung\">花東</option>\n        <option value=\"Island\">離島</option>\n      </select>  >\n      <select id=\"North\" class=\"ddl_Site\" @change=\"selectSite(0)\">\n        <option disabled selected></option>\n        <option value=\"富貴角\">富貴角</option>\n        <option value=\"萬里\">萬里</option>\n        <option value=\"淡水\">淡水</option>\n        <option value=\"陽明\">陽明</option>\n        <option value=\"基隆\">基隆</option>\n        <option value=\"士林\">士林</option>\n        <option value=\"林口\">林口</option>\n        <option value=\"三重\">三重</option>\n        <option value=\"菜寮\">菜寮</option>\n        <option value=\"汐止\">汐止</option>\n        <option value=\"大同\">大同</option>\n        <option value=\"中山\">中山</option>\n        <option value=\"大園\">大園</option>\n        <option value=\"松山\">松山</option>\n        <option value=\"萬華\">萬華</option>\n        <option value=\"新莊\">新莊</option>\n        <option value=\"觀音\">觀音</option>\n        <option value=\"古亭\">古亭</option>\n        <option value=\"永和\">永和</option>\n        <option value=\"板橋\">板橋</option>\n        <option value=\"土城\">土城</option>\n        <option value=\"桃園\">桃園</option>\n        <option value=\"新店\">新店</option>\n        <option value=\"平鎮\">平鎮</option>\n        <option value=\"中壢\">中壢</option>\n        <option value=\"龍潭\">龍潭</option>\n      </select>\n      <select id=\"Chu-Miao\" class=\"ddl_Site\" @change=\"selectSite(1)\">\n        <option disabled selected></option>\n        <option value=\"湖口\">湖口</option>\n        <option value=\"新竹\">新竹</option>\n        <option value=\"竹東\">竹東</option>\n        <option value=\"頭份\">頭份</option>\n        <option value=\"苗栗\">苗栗</option>\n        <option value=\"三義\">三義</option>\n      </select>\n      <select id=\"Central\" class=\"ddl_Site\" @change=\"selectSite(2)\">\n        <option disabled selected></option>\n        <option value=\"豐原\">豐原</option>\n        <option value=\"沙鹿\">沙鹿</option>\n        <option value=\"西屯\">西屯</option>\n        <option value=\"忠明\">忠明</option>\n        <option value=\"線西\">線西</option>\n        <option value=\"大里\">大里</option>\n        <option value=\"彰化\">彰化</option>\n        <option value=\"埔里\">埔里</option>\n        <option value=\"二林\">二林</option>\n        <option value=\"南投\">南投</option>\n        <option value=\"竹山\">竹山</option>\n      </select>\n      <select id=\"Yun-Chia-Nan\" class=\"ddl_Site\" @change=\"selectSite(3)\">\n        <option disabled selected=\"selected\"></option>\n        <option value=\"崙背\">崙背</option>\n        <option value=\"麥寮\">麥寮</option>\n        <option value=\"臺西\">臺西</option>\n        <option value=\"斗六\">斗六</option>\n        <option value=\"新港\">新港</option>\n        <option value=\"朴子\">朴子</option>\n        <option value=\"嘉義\">嘉義</option>\n        <option value=\"新營\">新營</option>\n        <option value=\"善化\">善化</option>\n        <option value=\"安南\">安南</option>\n        <option value=\"臺南\">臺南</option>\n      </select>\n      <select id=\"KaoPing\" class=\"ddl_Site\" @change=\"selectSite(4)\">\n        <option disabled selected></option>\n        <option value=\"美濃\">美濃</option>\n        <option value=\"橋頭\">橋頭</option>\n        <option value=\"楠梓\">楠梓</option>\n        <option value=\"仁武\">仁武</option>\n        <option value=\"左營\">左營</option>\n        <option value=\"屏東\">屏東</option>\n        <option value=\"前金\">前金</option>\n        <option value=\"鳳山\">鳳山</option>\n        <option value=\"復興\">復興</option>\n        <option value=\"前鎮\">前鎮</option>\n        <option value=\"小港\">小港</option>\n        <option value=\"大寮\">大寮</option>\n        <option value=\"潮州\">潮州</option>\n        <option value=\"林園\">林園</option>\n        <option value=\"恆春\">恆春</option>\n      </select>\n      <select id=\"Yilan\" class=\"ddl_Site\" @change=\"selectSite(5)\">\n        <option disabled selected></option>\n        <option value=\"宜蘭\">宜蘭</option>\n        <option value=\"冬山\">冬山</option>\n      </select>\n      <select id=\"Hua-Tung\" class=\"ddl_Site\" @change=\"selectSite(6)\">\n        <option disabled selected></option>\n        <option value=\"花蓮\">花蓮</option>\n        <option value=\"關山\">關山</option>\n        <option value=\"臺東\">臺東</option>\n      </select>\n      <select id=\"Island\" class=\"ddl_Site\" @change=\"selectSite(7)\">\n        <option disabled selected></option>\n        <option value=\"馬祖\">馬祖</option>\n        <option value=\"金門\">金門</option>\n        <option value=\"馬公\">馬公</option>\n      </select>\n      <button type=\"button\" id=\"search\" @click=\"search()\">查詢</button>\n    </span>\n    </div>\n    <div id=\"time\">發佈日期: {{time}}</div>\n    <div id=\"result\">\n      <div id=\"area\">\n        <span id=\"site\" style=\"font-size: 40px; font-weight: 700;\">{{area}}</span>\n        <span style=\"color: blue; font-weight: 700; margin-left: 120px;\">(一般站) (分鐘值)</span>\n      </div>\n      <div id=\"AQI\" v-bind:class=\"status\">\n        <div id=\"AQI_value\">\n          <span id=\"AQI_site\">AQI</span>\n          <span id=\"value\">{{AQI}}</span>\n        </div>\n        <div id=\"AQI_status\">\n          <span id=\"AOI_name\">空氣品質指標</span>\n          <span id=\"status\">{{AQI_status}}</span>\n        </div>\n      </div>\n      <table>\n        <tbody>\n          <tr>\n            <td rowspan=\"2\" class=\"title\">\n              O\n              <sub>3</sub> <br>\n              (ppb) <br>\n              臭氧\n            </td>\n            <td class=\"subtitle\">8小時<br>移動平均</td>\n            <td class=\"nums\">{{O3_8hrs}}</td>\n          </tr>\n          <tr>\n            <td class=\"subtitle\">小時<br>濃度</td>\n            <td class=\"nums\">{{O3}}</td>\n          </tr>\n          <tr>\n            <td rowspan=\"2\" class=\"title\">\n              PM\n              <sub>2.5</sub> <br>\n              (μg/m\n              <sup>3</sup> ) <br>\n              細懸浮微粒\n            </td>\n            <td class=\"subtitle\">移動<br>平均</td>\n            <td class=\"nums\">{{PM25_AVG}}</td>\n          </tr>\n          <tr>\n            <td class=\"subtitle\">小時<br>濃度</td>\n            <td class=\"nums\">{{PM25}}</td>\n          </tr>\n          <tr>\n            <td rowspan=\"2\" class=\"title\">\n              PM\n              <sub>10</sub> <br>\n              (μg/m\n              <sup>3</sup> ) <br>\n              懸浮微粒\n            </td>\n            <td class=\"subtitle\">移動<br>平均</td>\n            <td class=\"nums\">{{PM10_AVG}}</td>\n          </tr>\n          <tr>\n            <td class=\"subtitle\">小時<br>濃度</td>\n            <td class=\"nums\">{{PM10}}</td>\n          </tr>\n          <tr>\n            <td rowspan=\"2\" class=\"title\">\n              CO <br>\n              (ppm) <br>\n              一氧化碳\n            </td>\n            <td class=\"subtitle\">8小時移動<br>平均</td>\n            <td class=\"nums\">{{CO_8hrs}}</td>\n          </tr>\n          <tr>\n            <td class=\"subtitle\">小時<br>濃度</td>\n            <td class=\"nums\">{{CO}}</td>\n          </tr>\n          <tr>\n            <td class=\"title\">\n              SO\n              <sub>2</sub>\n              (ppb)<br>二氧化硫\n            </td>\n            <td class=\"subtitle\">小時<br>濃度</td>\n            <td class=\"nums\">{{SO2}}</td>\n          </tr>\n          <tr>\n            <td class=\"title\">\n              NO\n              <sub>2</sub>\n              (ppb)<br>二氧化氮\n            </td>\n            <td class=\"subtitle\">小時<br>濃度</td>\n            <td class=\"nums\">{{NO2}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  \n</template>\n\n<script>\nexport default {\n  name: 'search',\n  data () {\n    return {\n      site: \"\",\n      area: \"\",\n      info: [],\n      time: \"\",\n      AQI: \"\",\n      O3_8hrs: \"\",\n      O3: \"\",\n      PM25_AVG: \"\",\n      PM25: \"\",\n      PM10_AVG: \"\",\n      PM10: \"\",\n      CO_8hrs: \"\",\n      CO: \"\",\n      SO2: \"\",\n      NO2: \"\"\n    }\n  },\n  created() {\n     let xhttp = new XMLHttpRequest();\n     let that = this;\n     xhttp.onreadystatechange = function() {\n       if (this.readyState === 4 && this.status === 200) {\n       that.info = (JSON.parse(this.responseText));\n       } \n     };\n     xhttp.open(\"GET\", \"http://opendata2.epa.gov.tw/AQI.json\", true);\n     xhttp.send();\n  },\n  computed: {\n    AQI_status() {\n      if(this.AQI>=0 && this.AQI<=50) {\n        return '良好';\n      }\n      else if(this.AQI>=51 && this.AQI<=100) {\n        return '普通';\n      }\n      else if(this.AQI>=101 && this.AQI<=150) {\n        return '對敏感族群不健康';\n      }\n      else if(this.AQI>=151 && this.AQI<=200) {\n        return '對所有族群不健康';\n      }\n      else if(this.AQI>=201 && this.AQI<=300) {\n        return '非常不健康';\n      }\n      else {\n        return '危害';\n      }\n    },\n    status() {\n      if(this.AQI<=50)\n        return 'status_good';\n      else if(this.AQI>=51 && this.AQI<=100)\n        return 'status_ordinary';\n      else if(this.AQI>=101 && this.AQI<=150)\n        return 'status_bad';\n      else if(this.AQI>=151 && this.AQI<=200)\n        return 'status_soBad';\n      else if(this.AQI>=201 && this.AQI<=300)\n        return 'status_danger';\n      else \n        return 'status_veryDanger';\n    }\n  },\n  methods: {\n    selectArea() {\n      clearStates();\n      let area = document.getElementById('ddl_Area').value;\n      switch(area) {\n        case 'North': {\n          document.getElementById('North').style.display = \"inline\";\n          break;\n        }\n        case 'Chu-Miao': {\n          document.getElementById('Chu-Miao').style.display = \"inline\";\n          break;\n        }\n        case 'Central': {\n          document.getElementById('Central').style.display = \"inline\";\n          break;\n        }\n        case 'Yun-Chia-Nan': {\n          document.getElementById('Yun-Chia-Nan').style.display = \"inline\";\n          break;\n        }\n        case 'KaoPing': {\n          document.getElementById('KaoPing').style.display = \"inline\";\n          break;\n        }\n        case 'Yilan': {\n          document.getElementById('Yilan').style.display = \"inline\";\n          break;\n        }\n        case 'Hua-Tung': {\n          document.getElementById('Hua-Tung').style.display = \"inline\";\n          break;\n        }\n        case 'Island': {\n          document.getElementById('Island').style.display = \"inline\";\n          break;\n        }\n      }\n      for (let i=0; i<8; i++)\n        document.querySelectorAll('.ddl_Site')[i].selectedIndex = 0;\n    },\n    selectSite(index) {\n      this.site = document.querySelectorAll('.ddl_Site')[index].value;\n      console.log(this.site);\n    },\n    search() {\n      let data = this.info;\n      console.log(data);\n      if(this.site===\"\") this.$alertify.error(\"請選擇地區\");\n      this.area = this.site;\n      for (let i=0; i<data.length; i++) {\n        if(data[i].SiteName===this.area) {\n          document.querySelector('#time').style.display = \"block\";\n          this.time = data[i].PublishTime;\n          document.querySelector('#result').style.display = \"block\";\n          this.AQI = data[i].AQI;\n          this.O3_8hrs = data[i].O3_8hr;\n          this.O3 = data[i].O3;\n          this.PM25_AVG = data[i][\"PM2.5_AVG\"];\n          this.PM25 = data[i][\"PM2.5\"];\n          this.PM10_AVG = data[i].PM10_AVG;\n          this.PM10 = data[i].PM10;\n          this.CO_8hrs = data[i].CO_8hr;\n          this.CO = data[i].CO;\n          this.NO2 = data[i].NO2;\n          this.SO2 = data[i].SO2;\n        }\n      }\n      this.site = \"\";\n    },\n    getAQI(index) {\n      //console.log(this.info(index).AQI)\n      this.AQI = this.info(index).AQI;\n      return this.AQI;\n    }\n  }\n}\nfunction clearStates() {\n  document.getElementById('North').style.display = \"none\";\n  document.getElementById('Chu-Miao').style.display = \"none\";\n  document.getElementById('Central').style.display = \"none\";\n  document.getElementById('Yun-Chia-Nan').style.display = \"none\";\n  document.getElementById('KaoPing').style.display = \"none\";\n  document.getElementById('Yilan').style.display = \"none\";\n  document.getElementById('Hua-Tung').style.display = \"none\";\n  document.getElementById('Island').style.display = \"none\";\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ntable {\n  border-collapse: collapse;\n}\n\ntable, td, th {\n  border-bottom: 1px solid #DDD;\n}\n.district {\n  text-align: center;\n}\n#North, #Chu-Miao, #Central, #Yun-Chia-Nan,#KaoPing, #Yilan,\n#Hua-Tung, #Island  {\n  display: none;\n}\nselect {\n  height: 25px;\n}\n#time {\n  margin-top: 20px;\n  font-weight: 600;\n  display: none;\n  text-align: center;\n}\n#result {\n  display: none;\n  max-width: 400px;\n  margin:0 auto;\n  margin-top: 20px;\n  border:2px solid #939699;\n}\n#AQI {\n  border-top: 1px solid #939699;\n  border-bottom: 1px solid #939699;\n  padding: 12px 0;\n}\n#AQI_site {\n  font-size: 36px;\n  font-weight: 600;\n}\n#value {\n  float: right;\n  font-size: 26px;\n  font-weight: 600;\n}\n#AOI_name {\n  font-weight: 600;\n  text-decoration: underline;\n}\n#status {\n  float: right;\n  font-size: 24px;\n  font-weight: 600;\n}\n.status_good {\n  background-color: #00DD00;\n}\n.status_ordinary {\n  background-color: #FFFF00;\n}\n.status_bad {\n  background-color: #FF8800;\n}\n.status_soBad {\n  background-color: #FF0000;\n}\n.status_danger {\n  background-color: #C10066;\n}\n.status_veryDanger {\n  background-color: #8C0044;\n}\n.title {\n  width: 140px;\n  font-weight: 600;\n}\n.subtitle {\n  width: 180px;\n}\n.nums {\n  width: 80px;\n  text-align: center;\n  font-weight: 600;\n  font-size: 32px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/search.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"district\"},[_vm._m(1),_vm._v(\" \"),_c('span',{staticClass:\"area\"},[_vm._v(\"\\n    地區:\\n    \"),_c('select',{attrs:{\"id\":\"ddl_Area\"},on:{\"change\":function($event){_vm.selectArea()}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"North\"}},[_vm._v(\"北部\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"Chu-Miao\"}},[_vm._v(\"竹苗\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"Central\"}},[_vm._v(\"中部\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"Yun-Chia-Nan\"}},[_vm._v(\"雲嘉南\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"KaoPing\"}},[_vm._v(\"高屏\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"Yilan\"}},[_vm._v(\"宜蘭\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"Hua-Tung\"}},[_vm._v(\"花東\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"Island\"}},[_vm._v(\"離島\")])]),_vm._v(\"  >\\n    \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"North\"},on:{\"change\":function($event){_vm.selectSite(0)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"富貴角\"}},[_vm._v(\"富貴角\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"萬里\"}},[_vm._v(\"萬里\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"淡水\"}},[_vm._v(\"淡水\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"陽明\"}},[_vm._v(\"陽明\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"基隆\"}},[_vm._v(\"基隆\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"士林\"}},[_vm._v(\"士林\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"林口\"}},[_vm._v(\"林口\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"三重\"}},[_vm._v(\"三重\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"菜寮\"}},[_vm._v(\"菜寮\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"汐止\"}},[_vm._v(\"汐止\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"大同\"}},[_vm._v(\"大同\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"中山\"}},[_vm._v(\"中山\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"大園\"}},[_vm._v(\"大園\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"松山\"}},[_vm._v(\"松山\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"萬華\"}},[_vm._v(\"萬華\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"新莊\"}},[_vm._v(\"新莊\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"觀音\"}},[_vm._v(\"觀音\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"古亭\"}},[_vm._v(\"古亭\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"永和\"}},[_vm._v(\"永和\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"板橋\"}},[_vm._v(\"板橋\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"土城\"}},[_vm._v(\"土城\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"桃園\"}},[_vm._v(\"桃園\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"新店\"}},[_vm._v(\"新店\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"平鎮\"}},[_vm._v(\"平鎮\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"中壢\"}},[_vm._v(\"中壢\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"龍潭\"}},[_vm._v(\"龍潭\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"Chu-Miao\"},on:{\"change\":function($event){_vm.selectSite(1)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"湖口\"}},[_vm._v(\"湖口\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"新竹\"}},[_vm._v(\"新竹\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"竹東\"}},[_vm._v(\"竹東\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"頭份\"}},[_vm._v(\"頭份\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"苗栗\"}},[_vm._v(\"苗栗\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"三義\"}},[_vm._v(\"三義\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"Central\"},on:{\"change\":function($event){_vm.selectSite(2)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"豐原\"}},[_vm._v(\"豐原\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"沙鹿\"}},[_vm._v(\"沙鹿\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"西屯\"}},[_vm._v(\"西屯\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"忠明\"}},[_vm._v(\"忠明\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"線西\"}},[_vm._v(\"線西\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"大里\"}},[_vm._v(\"大里\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"彰化\"}},[_vm._v(\"彰化\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"埔里\"}},[_vm._v(\"埔里\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"二林\"}},[_vm._v(\"二林\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"南投\"}},[_vm._v(\"南投\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"竹山\"}},[_vm._v(\"竹山\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"Yun-Chia-Nan\"},on:{\"change\":function($event){_vm.selectSite(3)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"selected\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"崙背\"}},[_vm._v(\"崙背\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"麥寮\"}},[_vm._v(\"麥寮\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"臺西\"}},[_vm._v(\"臺西\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"斗六\"}},[_vm._v(\"斗六\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"新港\"}},[_vm._v(\"新港\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"朴子\"}},[_vm._v(\"朴子\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"嘉義\"}},[_vm._v(\"嘉義\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"新營\"}},[_vm._v(\"新營\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"善化\"}},[_vm._v(\"善化\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"安南\"}},[_vm._v(\"安南\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"臺南\"}},[_vm._v(\"臺南\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"KaoPing\"},on:{\"change\":function($event){_vm.selectSite(4)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"美濃\"}},[_vm._v(\"美濃\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"橋頭\"}},[_vm._v(\"橋頭\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"楠梓\"}},[_vm._v(\"楠梓\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"仁武\"}},[_vm._v(\"仁武\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"左營\"}},[_vm._v(\"左營\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"屏東\"}},[_vm._v(\"屏東\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"前金\"}},[_vm._v(\"前金\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"鳳山\"}},[_vm._v(\"鳳山\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"復興\"}},[_vm._v(\"復興\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"前鎮\"}},[_vm._v(\"前鎮\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"小港\"}},[_vm._v(\"小港\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"大寮\"}},[_vm._v(\"大寮\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"潮州\"}},[_vm._v(\"潮州\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"林園\"}},[_vm._v(\"林園\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"恆春\"}},[_vm._v(\"恆春\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"Yilan\"},on:{\"change\":function($event){_vm.selectSite(5)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"宜蘭\"}},[_vm._v(\"宜蘭\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"冬山\"}},[_vm._v(\"冬山\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"Hua-Tung\"},on:{\"change\":function($event){_vm.selectSite(6)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"花蓮\"}},[_vm._v(\"花蓮\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"關山\"}},[_vm._v(\"關山\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"臺東\"}},[_vm._v(\"臺東\")])]),_vm._v(\" \"),_c('select',{staticClass:\"ddl_Site\",attrs:{\"id\":\"Island\"},on:{\"change\":function($event){_vm.selectSite(7)}}},[_c('option',{attrs:{\"disabled\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"馬祖\"}},[_vm._v(\"馬祖\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"金門\"}},[_vm._v(\"金門\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"馬公\"}},[_vm._v(\"馬公\")])]),_vm._v(\" \"),_c('button',{attrs:{\"type\":\"button\",\"id\":\"search\"},on:{\"click\":function($event){_vm.search()}}},[_vm._v(\"查詢\")])])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"time\"}},[_vm._v(\"發佈日期: \"+_vm._s(_vm.time))]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"result\"}},[_c('div',{attrs:{\"id\":\"area\"}},[_c('span',{staticStyle:{\"font-size\":\"40px\",\"font-weight\":\"700\"},attrs:{\"id\":\"site\"}},[_vm._v(_vm._s(_vm.area))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"blue\",\"font-weight\":\"700\",\"margin-left\":\"120px\"}},[_vm._v(\"(一般站) (分鐘值)\")])]),_vm._v(\" \"),_c('div',{class:_vm.status,attrs:{\"id\":\"AQI\"}},[_c('div',{attrs:{\"id\":\"AQI_value\"}},[_c('span',{attrs:{\"id\":\"AQI_site\"}},[_vm._v(\"AQI\")]),_vm._v(\" \"),_c('span',{attrs:{\"id\":\"value\"}},[_vm._v(_vm._s(_vm.AQI))])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"AQI_status\"}},[_c('span',{attrs:{\"id\":\"AOI_name\"}},[_vm._v(\"空氣品質指標\")]),_vm._v(\" \"),_c('span',{attrs:{\"id\":\"status\"}},[_vm._v(_vm._s(_vm.AQI_status))])])]),_vm._v(\" \"),_c('table',[_c('tbody',[_c('tr',[_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.O3_8hrs))])]),_vm._v(\" \"),_c('tr',[_vm._m(4),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.O3))])]),_vm._v(\" \"),_c('tr',[_vm._m(5),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.PM25_AVG))])]),_vm._v(\" \"),_c('tr',[_vm._m(7),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.PM25))])]),_vm._v(\" \"),_c('tr',[_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.PM10_AVG))])]),_vm._v(\" \"),_c('tr',[_vm._m(10),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.PM10))])]),_vm._v(\" \"),_c('tr',[_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.CO_8hrs))])]),_vm._v(\" \"),_c('tr',[_vm._m(13),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.CO))])]),_vm._v(\" \"),_c('tr',[_vm._m(14),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.SO2))])]),_vm._v(\" \"),_c('tr',[_vm._m(16),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_c('td',{staticClass:\"nums\"},[_vm._v(_vm._s(_vm.NO2))])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"instruction\",staticStyle:{\"text-align\":\"center\"}},[_c('h2',[_vm._v(\"點擊下方下拉式選單查詢\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{attrs:{\"id\":\"unit\"}},[_vm._v(\"\\n    所屬單位: \\n    \"),_c('select',{attrs:{\"id\":\"subUnit\",\"name\":\"environment\"}},[_c('option',{attrs:{\"value\":\"environment\"}},[_vm._v(\"環保署\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"title\",attrs:{\"rowspan\":\"2\"}},[_vm._v(\"\\n            O\\n            \"),_c('sub',[_vm._v(\"3\")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n            (ppb) \"),_c('br'),_vm._v(\"\\n            臭氧\\n          \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"8小時\"),_c('br'),_vm._v(\"移動平均\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"小時\"),_c('br'),_vm._v(\"濃度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"title\",attrs:{\"rowspan\":\"2\"}},[_vm._v(\"\\n            PM\\n            \"),_c('sub',[_vm._v(\"2.5\")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n            (μg/m\\n            \"),_c('sup',[_vm._v(\"3\")]),_vm._v(\" ) \"),_c('br'),_vm._v(\"\\n            細懸浮微粒\\n          \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"移動\"),_c('br'),_vm._v(\"平均\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"小時\"),_c('br'),_vm._v(\"濃度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"title\",attrs:{\"rowspan\":\"2\"}},[_vm._v(\"\\n            PM\\n            \"),_c('sub',[_vm._v(\"10\")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n            (μg/m\\n            \"),_c('sup',[_vm._v(\"3\")]),_vm._v(\" ) \"),_c('br'),_vm._v(\"\\n            懸浮微粒\\n          \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"移動\"),_c('br'),_vm._v(\"平均\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"小時\"),_c('br'),_vm._v(\"濃度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"title\",attrs:{\"rowspan\":\"2\"}},[_vm._v(\"\\n            CO \"),_c('br'),_vm._v(\"\\n            (ppm) \"),_c('br'),_vm._v(\"\\n            一氧化碳\\n          \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"8小時移動\"),_c('br'),_vm._v(\"平均\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"小時\"),_c('br'),_vm._v(\"濃度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"title\"},[_vm._v(\"\\n            SO\\n            \"),_c('sub',[_vm._v(\"2\")]),_vm._v(\"\\n            (ppb)\"),_c('br'),_vm._v(\"二氧化硫\\n          \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"小時\"),_c('br'),_vm._v(\"濃度\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"title\"},[_vm._v(\"\\n            NO\\n            \"),_c('sub',[_vm._v(\"2\")]),_vm._v(\"\\n            (ppb)\"),_c('br'),_vm._v(\"二氧化氮\\n          \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticClass:\"subtitle\"},[_vm._v(\"小時\"),_c('br'),_vm._v(\"濃度\")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ed43a942\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/search.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ed43a942\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./search.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./search.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./search.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ed43a942\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./search.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ed43a942\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search.vue\n// module id = null\n// module chunks = ","import Alertify from \"alertifyjs\";\n\nvar VueAlertify = {};\n\nVueAlertify.install = function (Vue, options) {\n    Object.assign(Alertify.defaults, options);\n\n    Object.defineProperty(Vue.prototype, '$alertify', {\n        get: function get() {\n            return {\n                success: function success(text) {\n                    \"use strict\";\n\n                    Alertify.success(text);\n                },\n                error: function error(text) {\n                    \"use strict\";\n\n                    Alertify.error(text);\n                },\n                warning: function warning(text) {\n                    Alertify.warning(text);\n                },\n                message: function message(text) {\n                    Alertify.message(text);\n                },\n                alert: function alert(text, cb) {\n                    Alertify.alert(text, cb);\n                },\n                alertWithTitle: function alertWithTitle(title, text, cb) {\n                    Alertify.alert(title, text, cb);\n                },\n                confirm: function confirm(text, ok, cancel) {\n                    Alertify.confirm(text, ok, cancel);\n                },\n                confirmWithTitle: function confirmWithTitle(title, text, ok, cancel) {\n                    Alertify.confirm(title, text, ok, cancel);\n                },\n                prompt: function prompt(text, defaultValue, ok, cancel) {\n                    Alertify.prompt(text, defaultValue, ok, cancel);\n                },\n                promptWithTitle: function promptWithTitle(title, text, defaultValue, ok, cancel) {\n                    Alertify.prompt(title, text, defaultValue, ok, cancel);\n                }\n            };\n        }\n    });\n};\n\n// if in browser , bind VueAlertify to window and load Alertify.css\nif (window && document) {\n    window.VueAlertify = VueAlertify;\n\n    loadCSSIfNotAlreadyLoaded(document, \"//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/alertify.min.css\");\n    loadCSSIfNotAlreadyLoaded(document, \"//cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/themes/default.min.css\");\n}\n\nfunction loadCSSIfNotAlreadyLoaded(document, href) {\n    var ss = document.styleSheets;\n    for (var i = 0, max = ss.length; i < max; i++) {\n        if (ss[i].href == href) return;\n    }\n    var link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = href;\n\n    document.getElementsByTagName(\"head\")[0].appendChild(link);\n}\n\nexport default VueAlertify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-alertify/es/index.js\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport search from '@/components/search'\nimport VueAlertify from \"vue-alertify\"\n\nVue.use(VueAlertify)\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'search',\n      component: search\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","/**\r\n * alertifyjs 1.11.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2018 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\r\n( function ( window ) {\r\n    'use strict';\r\n    \r\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */\r\n    var keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        F1: 112,\r\n        F12: 123,\r\n        LEFT: 37,\r\n        RIGHT: 39\r\n    };\r\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        autoReset:true,\r\n        basic:false,\r\n        closable:true,\r\n        closableByDimmer:true,\r\n        frameless:false,\r\n        maintainFocus:true, //global default not per instance, applies to all dialogs\r\n        maximizable:true,\r\n        modal:true,\r\n        movable:true,\r\n        moveBounded:false,\r\n        overflow:true,\r\n        padding: true,\r\n        pinnable:true,\r\n        pinned:true,\r\n        preventBodyShift:false, //global default not per instance, applies to all dialogs\r\n        resizable:true,\r\n        startMaximized:false,\r\n        transition:'pulse',\r\n        notifier:{\r\n            delay:5,\r\n            position:'bottom-right',\r\n            closeButton:false\r\n        },\r\n        glossary:{\r\n            title:'AlertifyJS',\r\n            ok: 'OK',\r\n            cancel: 'Cancel',\r\n            acccpt: 'Accept',\r\n            deny: 'Deny',\r\n            confirm: 'Confirm',\r\n            decline: 'Decline',\r\n            close: 'Close',\r\n            maximize: 'Maximize',\r\n            restore: 'Restore',\r\n        },\r\n        theme:{\r\n            input:'ajs-input',\r\n            ok:'ajs-ok',\r\n            cancel:'ajs-cancel',\r\n        }\r\n    };\r\n    \r\n    //holds open dialogs instances\r\n    var openDialogs = [];\r\n\r\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function addClass(element,classNames){\r\n        element.className += ' ' + classNames;\r\n    }\r\n    \r\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function removeClass(element, classNames) {\r\n        var original = element.className.split(' ');\r\n        var toBeRemoved = classNames.split(' ');\r\n        for (var x = 0; x < toBeRemoved.length; x += 1) {\r\n            var index = original.indexOf(toBeRemoved[x]);\r\n            if (index > -1){\r\n                original.splice(index,1);\r\n            }\r\n        }\r\n        element.className = original.join(' ');\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */\r\n    function isRightToLeft(){\r\n        return window.getComputedStyle(document.body).direction === 'rtl';\r\n    }\r\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */\r\n    function getScrollTop(){\r\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */\r\n    function getScrollLeft(){\r\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\r\n    }\r\n\r\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */\r\n    function clearContents(element){\r\n        while (element.lastChild) {\r\n            element.removeChild(element.lastChild);\r\n        }\r\n    }\r\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\r\n    function copy(src) {\r\n        if(null === src){\r\n            return src;\r\n        }\r\n        var cpy;\r\n        if(Array.isArray(src)){\r\n            cpy = [];\r\n            for(var x=0;x<src.length;x+=1){\r\n                cpy.push(copy(src[x]));\r\n            }\r\n            return cpy;\r\n        }\r\n      \r\n        if(src instanceof Date){\r\n            return new Date(src.getTime());\r\n        }\r\n      \r\n        if(src instanceof RegExp){\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        \r\n        if(typeof src === 'object'){\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = copy(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */\r\n    function destruct(instance, initialize){\r\n        //delete the dom and it's references.\r\n        var root = instance.elements.root;\r\n        root.parentNode.removeChild(root);\r\n        delete instance.elements;\r\n        //copy back initial settings.\r\n        instance.settings = copy(instance.__settings);\r\n        //re-reference init function.\r\n        instance.__init = initialize;\r\n        //delete __internal variable to allow re-initialization.\r\n        delete instance.__internal;\r\n    }\r\n\r\n    /**\r\n     * Use a closure to return proper event listener method. Try to use\r\n     * `addEventListener` by default but fallback to `attachEvent` for\r\n     * unsupported browser. The closure simply ensures that the test doesn't\r\n     * happen every time the method is called.\r\n     *\r\n     * @param    {Node}     el    Node element\r\n     * @param    {String}   event Event type\r\n     * @param    {Function} fn    Callback of event\r\n     * @return   {Function}\r\n     */\r\n    var on = (function () {\r\n        if (document.addEventListener) {\r\n            return function (el, event, fn, useCapture) {\r\n                el.addEventListener(event, fn, useCapture === true);\r\n            };\r\n        } else if (document.attachEvent) {\r\n            return function (el, event, fn) {\r\n                el.attachEvent('on' + event, fn);\r\n            };\r\n        }\r\n    }());\r\n\r\n    /**\r\n     * Use a closure to return proper event listener method. Try to use\r\n     * `removeEventListener` by default but fallback to `detachEvent` for\r\n     * unsupported browser. The closure simply ensures that the test doesn't\r\n     * happen every time the method is called.\r\n     *\r\n     * @param    {Node}     el    Node element\r\n     * @param    {String}   event Event type\r\n     * @param    {Function} fn    Callback of event\r\n     * @return   {Function}\r\n     */\r\n    var off = (function () {\r\n        if (document.removeEventListener) {\r\n            return function (el, event, fn, useCapture) {\r\n                el.removeEventListener(event, fn, useCapture === true);\r\n            };\r\n        } else if (document.detachEvent) {\r\n            return function (el, event, fn) {\r\n                el.detachEvent('on' + event, fn);\r\n            };\r\n        }\r\n    }());\r\n\r\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */\r\n    var transition = (function () {\r\n        var t, type;\r\n        var supported = false;\r\n        var transitions = {\r\n            'animation'        : 'animationend',\r\n            'OAnimation'       : 'oAnimationEnd oanimationend',\r\n            'msAnimation'      : 'MSAnimationEnd',\r\n            'MozAnimation'     : 'animationend',\r\n            'WebkitAnimation'  : 'webkitAnimationEnd'\r\n        };\r\n\r\n        for (t in transitions) {\r\n            if (document.documentElement.style[t] !== undefined) {\r\n                type = transitions[t];\r\n                supported = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            supported: supported\r\n        };\r\n    }());\r\n\r\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */\r\n    function delegate(context, method) {\r\n        return function () {\r\n            if (arguments.length > 0) {\r\n                var args = [];\r\n                for (var x = 0; x < arguments.length; x += 1) {\r\n                    args.push(arguments[x]);\r\n                }\r\n                args.push(context);\r\n                return method.apply(context, args);\r\n            }\r\n            return method.apply(context, [null, context]);\r\n        };\r\n    }\r\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */\r\n    function createCloseEvent(index, button) {\r\n        return {\r\n            index: index,\r\n            button: button,\r\n            cancel: false\r\n        };\r\n    }\r\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */\r\n    function dispatchEvent(eventType, instance) {\r\n        if ( typeof instance.get(eventType) === 'function' ) {\r\n            return instance.get(eventType).call(instance);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */\r\n    var dialog = (function () {\r\n        var //holds the list of used keys.\r\n            usedKeys = [],\r\n            //dummy variable, used to trigger dom reflow.\r\n            reflow = null,\r\n            //holds body tab index in case it has any.\r\n            tabindex = false,\r\n            //condition for detecting safari\r\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\r\n            //dialog building blocks\r\n            templates = {\r\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\r\n                /*tab index required to fire click event before body focus*/\r\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\r\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\r\n                reset: '<button class=\"ajs-reset\"></button>',\r\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\r\n                header: '<div class=\"ajs-header\"></div>',\r\n                body: '<div class=\"ajs-body\"></div>',\r\n                content: '<div class=\"ajs-content\"></div>',\r\n                footer: '<div class=\"ajs-footer\"></div>',\r\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\r\n                button: '<button class=\"ajs-button\"></button>',\r\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\r\n            },\r\n            //common class names\r\n            classes = {\r\n                animationIn: 'ajs-in',\r\n                animationOut: 'ajs-out',\r\n                base: 'alertify',\r\n                basic:'ajs-basic',\r\n                capture: 'ajs-capture',\r\n                closable:'ajs-closable',\r\n                fixed: 'ajs-fixed',\r\n                frameless:'ajs-frameless',\r\n                hidden: 'ajs-hidden',\r\n                maximize: 'ajs-maximize',\r\n                maximized: 'ajs-maximized',\r\n                maximizable:'ajs-maximizable',\r\n                modeless: 'ajs-modeless',\r\n                movable: 'ajs-movable',\r\n                noSelection: 'ajs-no-selection',\r\n                noOverflow: 'ajs-no-overflow',\r\n                noPadding:'ajs-no-padding',\r\n                pin:'ajs-pin',\r\n                pinnable:'ajs-pinnable',\r\n                prefix: 'ajs-',\r\n                resizable: 'ajs-resizable',\r\n                restore: 'ajs-restore',\r\n                shake:'ajs-shake',\r\n                unpinned:'ajs-unpinned',\r\n            };\r\n\r\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */\r\n        function initialize(instance){\r\n            \r\n            if(!instance.__internal){\r\n\r\n                //no need to expose init after this.\r\n                delete instance.__init;\r\n              \r\n                //keep a copy of initial dialog settings\r\n                if(!instance.__settings){\r\n                    instance.__settings = copy(instance.settings);\r\n                }\r\n                \r\n                //get dialog buttons/focus setup\r\n                var setup;\r\n                if(typeof instance.setup === 'function'){\r\n                    setup = instance.setup();\r\n                    setup.options = setup.options  || {};\r\n                    setup.focus = setup.focus  || {};\r\n                }else{\r\n                    setup = {\r\n                        buttons:[],\r\n                        focus:{\r\n                            element:null,\r\n                            select:false\r\n                        },\r\n                        options:{\r\n                        }\r\n                    };\r\n                }\r\n                \r\n                //initialize hooks object.\r\n                if(typeof instance.hooks !== 'object'){\r\n                    instance.hooks = {};\r\n                }\r\n\r\n                //copy buttons defintion\r\n                var buttonsDefinition = [];\r\n                if(Array.isArray(setup.buttons)){\r\n                    for(var b=0;b<setup.buttons.length;b+=1){\r\n                        var ref  = setup.buttons[b],\r\n                            cpy = {};\r\n                        for (var i in ref) {\r\n                            if (ref.hasOwnProperty(i)) {\r\n                                cpy[i] = ref[i];\r\n                            }\r\n                        }\r\n                        buttonsDefinition.push(cpy);\r\n                    }\r\n                }\r\n\r\n                var internal = instance.__internal = {\r\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */\r\n                    isOpen:false,\r\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */\r\n                    activeElement:document.body,\r\n                    timerIn:undefined,\r\n                    timerOut:undefined,\r\n                    buttons: buttonsDefinition,\r\n                    focus: setup.focus,\r\n                    options: {\r\n                        title: undefined,\r\n                        modal: undefined,\r\n                        basic:undefined,\r\n                        frameless:undefined,\r\n                        pinned: undefined,\r\n                        movable: undefined,\r\n                        moveBounded:undefined,\r\n                        resizable: undefined,\r\n                        autoReset: undefined,\r\n                        closable: undefined,\r\n                        closableByDimmer: undefined,\r\n                        maximizable: undefined,\r\n                        startMaximized: undefined,\r\n                        pinnable: undefined,\r\n                        transition: undefined,\r\n                        padding:undefined,\r\n                        overflow:undefined,\r\n                        onshow:undefined,\r\n                        onclosing:undefined,\r\n                        onclose:undefined,\r\n                        onfocus:undefined,\r\n                        onmove:undefined,\r\n                        onmoved:undefined,\r\n                        onresize:undefined,\r\n                        onresized:undefined,\r\n                        onmaximize:undefined,\r\n                        onmaximized:undefined,\r\n                        onrestore:undefined,\r\n                        onrestored:undefined\r\n                    },\r\n                    resetHandler:undefined,\r\n                    beginMoveHandler:undefined,\r\n                    beginResizeHandler:undefined,\r\n                    bringToFrontHandler:undefined,\r\n                    modalClickHandler:undefined,\r\n                    buttonsClickHandler:undefined,\r\n                    commandsClickHandler:undefined,\r\n                    transitionInHandler:undefined,\r\n                    transitionOutHandler:undefined,\r\n                    destroy:undefined\r\n                };\r\n\r\n                var elements = {};\r\n                //root node\r\n                elements.root = document.createElement('div');\r\n                \r\n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\r\n\r\n                elements.root.innerHTML = templates.dimmer + templates.modal;\r\n                \r\n                //dimmer\r\n                elements.dimmer = elements.root.firstChild;\r\n\r\n                //dialog\r\n                elements.modal = elements.root.lastChild;\r\n                elements.modal.innerHTML = templates.dialog;\r\n                elements.dialog = elements.modal.firstChild;\r\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\r\n\r\n                //reset links\r\n                elements.reset = [];\r\n                elements.reset.push(elements.dialog.firstChild);\r\n                elements.reset.push(elements.dialog.lastChild);\r\n                \r\n                //commands\r\n                elements.commands = {};\r\n                elements.commands.container = elements.reset[0].nextSibling;\r\n                elements.commands.pin = elements.commands.container.firstChild;\r\n                elements.commands.maximize = elements.commands.pin.nextSibling;\r\n                elements.commands.close = elements.commands.maximize.nextSibling;\r\n                \r\n                //header\r\n                elements.header = elements.commands.container.nextSibling;\r\n\r\n                //body\r\n                elements.body = elements.header.nextSibling;\r\n                elements.body.innerHTML = templates.content;\r\n                elements.content = elements.body.firstChild;\r\n\r\n                //footer\r\n                elements.footer = elements.body.nextSibling;\r\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\r\n                \r\n                //resize handle\r\n                elements.resizeHandle = elements.footer.nextSibling;\r\n\r\n                //buttons\r\n                elements.buttons = {};\r\n                elements.buttons.auxiliary = elements.footer.firstChild;\r\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\r\n                elements.buttons.primary.innerHTML = templates.button;\r\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\r\n                //remove button template\r\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\r\n                               \r\n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\r\n                    var button = instance.__internal.buttons[x];\r\n                    \r\n                    // add to the list of used keys.\r\n                    if(usedKeys.indexOf(button.key) < 0){\r\n                        usedKeys.push(button.key);\r\n                    }\r\n\r\n                    button.element = elements.buttonTemplate.cloneNode();\r\n                    button.element.innerHTML = button.text;\r\n                    if(typeof button.className === 'string' &&  button.className !== ''){\r\n                        addClass(button.element, button.className);\r\n                    }\r\n                    for(var key in button.attrs){\r\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\r\n                            button.element.setAttribute(key, button.attrs[key]);\r\n                        }\r\n                    }\r\n                    if(button.scope === 'auxiliary'){\r\n                        elements.buttons.auxiliary.appendChild(button.element);\r\n                    }else{\r\n                        elements.buttons.primary.appendChild(button.element);\r\n                    }\r\n                }\r\n                //make elements pubic\r\n                instance.elements = elements;\r\n                \r\n                //save event handlers delegates\r\n                internal.resetHandler = delegate(instance, onReset);\r\n                internal.beginMoveHandler = delegate(instance, beginMove);\r\n                internal.beginResizeHandler = delegate(instance, beginResize);\r\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\r\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\r\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\r\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\r\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\r\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\r\n\r\n                //settings\r\n                for(var opKey in internal.options){\r\n                    if(setup.options[opKey] !== undefined){\r\n                        // if found in user options\r\n                        instance.set(opKey, setup.options[opKey]);\r\n                    }else if(alertify.defaults.hasOwnProperty(opKey)) {\r\n                        // else if found in defaults options\r\n                        instance.set(opKey, alertify.defaults[opKey]);\r\n                    }else if(opKey === 'title' ) {\r\n                        // else if title key, use alertify.defaults.glossary\r\n                        instance.set(opKey, alertify.defaults.glossary[opKey]);\r\n                    }\r\n                }\r\n\r\n                // allow dom customization\r\n                if(typeof instance.build === 'function'){\r\n                    instance.build();\r\n                }\r\n            }\r\n            \r\n            //add to the end of the DOM tree.\r\n            document.body.appendChild(instance.elements.root);\r\n        }\r\n\r\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */\r\n        var scrollX, scrollY;\r\n        function saveScrollPosition(){\r\n            scrollX = getScrollLeft();\r\n            scrollY = getScrollTop();\r\n        }\r\n        function restoreScrollPosition(){\r\n            window.scrollTo(scrollX, scrollY);\r\n        }\r\n\r\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */\r\n        function ensureNoOverflow(){\r\n            var requiresNoOverflow = 0;\r\n            for(var x=0;x<openDialogs.length;x+=1){\r\n                var instance = openDialogs[x];\r\n                if(instance.isModal() || instance.isMaximized()){\r\n                    requiresNoOverflow+=1;\r\n                }\r\n            }\r\n            if(requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0){\r\n                //last open modal or last maximized one\r\n                removeClass(document.body, classes.noOverflow);\r\n                preventBodyShift(false);\r\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\r\n                //first open modal or first maximized one\r\n                preventBodyShift(true);\r\n                addClass(document.body, classes.noOverflow);\r\n            }\r\n        }\r\n        var top = '', topScroll = 0;\r\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */\r\n        function preventBodyShift(add){\r\n            if(alertify.defaults.preventBodyShift && document.documentElement.scrollHeight > document.documentElement.clientHeight){\r\n                if(add ){//&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\r\n                    topScroll = scrollY;\r\n                    top = window.getComputedStyle(document.body).top;\r\n                    addClass(document.body, classes.fixed);\r\n                    document.body.style.top = -scrollY + 'px';\r\n                } else {\r\n                    scrollY = topScroll;\r\n                    document.body.style.top = top;\r\n                    removeClass(document.body, classes.fixed);\r\n                    restoreScrollPosition();\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */\r\n        function updateTransition(instance, value, oldValue){\r\n            if(typeof oldValue === 'string'){\r\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\r\n            }\r\n            addClass(instance.elements.root, classes.prefix + value);\r\n            reflow = instance.elements.root.offsetWidth;\r\n        }\r\n\t\t\r\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateDisplayMode(instance){\r\n            if(instance.get('modal')){\r\n\r\n                //make modal\r\n                removeClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    unbindModelessEvents(instance);\r\n\r\n                    //in case a pinned modless dialog was made modal while open.\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }else{\r\n                //make modelss\r\n                addClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    bindModelessEvents(instance);\r\n\r\n                    //in case pin/unpin was called while a modal is open\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateBasicMode(instance){\r\n            if (instance.get('basic')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.basic);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.basic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateFramelessMode(instance){\r\n            if (instance.get('frameless')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.frameless);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.frameless);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bringToFront(event, instance){\r\n            \r\n            // Do not bring to front if preceeded by an open modal\r\n            var index = openDialogs.indexOf(instance);\r\n            for(var x=index+1;x<openDialogs.length;x+=1){\r\n                if(openDialogs[x].isModal()){\r\n                    return;\r\n                }\r\n            }\r\n\t\t\t\r\n            // Bring to front by making it the last child.\r\n            if(document.body.lastChild !== instance.elements.root){\r\n                document.body.appendChild(instance.elements.root);\r\n                //also make sure its at the end of the list\r\n                openDialogs.splice(openDialogs.indexOf(instance),1);\r\n                openDialogs.push(instance);\r\n                setFocus(instance);\r\n            }\r\n\t\t\t\r\n            return false;\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */\r\n        function optionUpdated(instance, option, oldValue, newValue){\r\n            switch(option){\r\n            case 'title':\r\n                instance.setHeader(newValue);\r\n                break;\r\n            case 'modal':\r\n                updateDisplayMode(instance);\r\n                break;\r\n            case 'basic':\r\n                updateBasicMode(instance);\r\n                break;\r\n            case 'frameless':\r\n                updateFramelessMode(instance);\r\n                break;\r\n            case 'pinned':\r\n                updatePinned(instance);\r\n                break;\r\n            case 'closable':\r\n                updateClosable(instance);\r\n                break;\r\n            case 'maximizable':\r\n                updateMaximizable(instance);\r\n                break;\r\n            case 'pinnable':\r\n                updatePinnable(instance);\r\n                break;\r\n            case 'movable':\r\n                updateMovable(instance);\r\n                break;\r\n            case 'resizable':\r\n                updateResizable(instance);\r\n                break;\r\n            case 'padding':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noPadding);\r\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\r\n                    addClass(instance.elements.root, classes.noPadding);\r\n                }\r\n                break;\r\n            case 'overflow':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noOverflow);\r\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\r\n                    addClass(instance.elements.root, classes.noOverflow);\r\n                }\r\n                break;\r\n            case 'transition':\r\n                updateTransition(instance,newValue, oldValue);\r\n                break;\r\n            }\r\n\r\n            // internal on option updated event\r\n            if(typeof instance.hooks.onupdate === 'function'){\r\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */\r\n        function update(instance, obj, callback, key, value){\r\n            var result = {op:undefined, items: [] };\r\n            if(typeof value === 'undefined' && typeof key === 'string') {\r\n                //get\r\n                result.op = 'get';\r\n                if(obj.hasOwnProperty(key)){\r\n                    result.found = true;\r\n                    result.value = obj[key];\r\n                }else{\r\n                    result.found = false;\r\n                    result.value = undefined;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                var old;\r\n                //set\r\n                result.op = 'set';\r\n                if(typeof key === 'object'){\r\n                    //set multiple\r\n                    var args = key;\r\n                    for (var prop in args) {\r\n                        if (obj.hasOwnProperty(prop)) {\r\n                            if(obj[prop] !== args[prop]){\r\n                                old = obj[prop];\r\n                                obj[prop] = args[prop];\r\n                                callback.call(instance,prop, old, args[prop]);\r\n                            }\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\r\n                        }else{\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\r\n                        }\r\n                    }\r\n                } else if (typeof key === 'string'){\r\n                    //set single\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if(obj[key] !== value){\r\n                            old  = obj[key];\r\n                            obj[key] = value;\r\n                            callback.call(instance,key, old, value);\r\n                        }\r\n                        result.items.push({'key': key, 'value': value , 'found':true});\r\n\r\n                    }else{\r\n                        result.items.push({'key': key, 'value': value , 'found':false});\r\n                    }\r\n                } else {\r\n                    //invalid params\r\n                    throw new Error('args must be a string or object');\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function triggerClose(instance) {\r\n            var found;\r\n            triggerCallback(instance, function (button) {\r\n                return found = (button.invokeOnClose === true);\r\n            });\r\n            //none of the buttons registered as onclose callback\r\n            //close the dialog\r\n            if (!found && instance.isOpen()) {\r\n                instance.close();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function commandsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            switch (target) {\r\n            case instance.elements.commands.pin:\r\n                if (!instance.isPinned()) {\r\n                    pin(instance);\r\n                } else {\r\n                    unpin(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.maximize:\r\n                if (!instance.isMaximized()) {\r\n                    maximize(instance);\r\n                } else {\r\n                    restore(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.close:\r\n                triggerClose(instance);\r\n                break;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function pin(instance) {\r\n            //pin the dialog\r\n            instance.set('pinned', true);\r\n        }\r\n\r\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function unpin(instance) {\r\n            //unpin the dialog \r\n            instance.set('pinned', false);\r\n        }\r\n\r\n\r\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function maximize(instance) {\r\n            // allow custom `onmaximize` method\r\n            dispatchEvent('onmaximize', instance);\r\n            //maximize the dialog \r\n            addClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onmaximized` method\r\n            dispatchEvent('onmaximized', instance);\r\n        }\r\n\r\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function restore(instance) {\r\n            // allow custom `onrestore` method\r\n            dispatchEvent('onrestore', instance);\r\n            //maximize the dialog \r\n            removeClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onrestored` method\r\n            dispatchEvent('onrestored', instance);\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinnable(instance) {\r\n            if (instance.get('pinnable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.pinnable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.pinnable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function addAbsPositionFix(instance) {\r\n            var scrollLeft = getScrollLeft();\r\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\r\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\r\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\r\n        }\r\n\r\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function removeAbsPositionFix(instance) {\r\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\r\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\r\n            instance.elements.modal.style.marginTop = '';\r\n            instance.elements.modal.style.marginLeft = '';\r\n            instance.elements.modal.style.marginRight = '';\r\n\r\n            if (instance.isOpen()) {\r\n                var top = 0,\r\n                    left = 0\r\n                ;\r\n                if (instance.elements.dialog.style.top !== '') {\r\n                    top = parseInt(instance.elements.dialog.style.top, 10);\r\n                }\r\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\r\n\r\n                if (instance.elements.dialog.style.left !== '') {\r\n                    left = parseInt(instance.elements.dialog.style.left, 10);\r\n                }\r\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\r\n            }\r\n        }\r\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateAbsPositionFix(instance) {\r\n            // if modeless and unpinned add fix\r\n            if (!instance.get('modal') && !instance.get('pinned')) {\r\n                addAbsPositionFix(instance);\r\n            } else {\r\n                removeAbsPositionFix(instance);\r\n            }\r\n        }\r\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinned(instance) {\r\n            if (instance.get('pinned')) {\r\n                removeClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen()) {\r\n                    removeAbsPositionFix(instance);\r\n                }\r\n            } else {\r\n                addClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen() && !instance.isModal()) {\r\n                    addAbsPositionFix(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMaximizable(instance) {\r\n            if (instance.get('maximizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.maximizable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.maximizable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateClosable(instance) {\r\n            if (instance.get('closable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.closable);\r\n                bindClosableEvents(instance);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.closable);\r\n                unbindClosableEvents(instance);\r\n            }\r\n        }\r\n\r\n        // flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\r\n        var cancelClick = false;\r\n\r\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function modalClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            if (!cancelClick && target === instance.elements.modal && instance.get('closableByDimmer') === true) {\r\n                triggerClose(instance);\r\n            }\r\n            cancelClick = false;\r\n            return false;\r\n        }\r\n\r\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\r\n        var cancelKeyup = false;\r\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function triggerCallback(instance, check) {\r\n            for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\r\n                var button = instance.__internal.buttons[idx];\r\n                if (!button.element.disabled && check(button)) {\r\n                    var closeEvent = createCloseEvent(idx, button);\r\n                    if (typeof instance.callback === 'function') {\r\n                        instance.callback.apply(instance, [closeEvent]);\r\n                    }\r\n                    //close the dialog only if not canceled.\r\n                    if (closeEvent.cancel === false) {\r\n                        instance.close();\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function buttonsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            triggerCallback(instance, function (button) {\r\n                // if this button caused the click, cancel keyup event\r\n                return button.element === target && (cancelKeyup = true);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function keyupHandler(event) {\r\n            //hitting enter while button has focus will trigger keyup too.\r\n            //ignore if handled by clickHandler\r\n            if (cancelKeyup) {\r\n                cancelKeyup = false;\r\n                return;\r\n            }\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\r\n                triggerClose(instance);\r\n                return false;\r\n            }else if (usedKeys.indexOf(keyCode) > -1) {\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */\r\n        function keydownHandler(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\r\n                var buttons = instance.__internal.buttons;\r\n                for (var x = 0; x < buttons.length; x += 1) {\r\n                    if (document.activeElement === buttons[x].element) {\r\n                        switch (keyCode) {\r\n                        case keys.LEFT:\r\n                            buttons[(x || buttons.length) - 1].element.focus();\r\n                            return;\r\n                        case keys.RIGHT:\r\n                            buttons[(x + 1) % buttons.length].element.focus();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function setFocus(instance, resetTarget) {\r\n            // reset target has already been determined.\r\n            if (resetTarget) {\r\n                resetTarget.focus();\r\n            } else {\r\n                // current instance focus settings\r\n                var focus = instance.__internal.focus;\r\n                // the focus element.\r\n                var element = focus.element;\r\n\r\n                switch (typeof focus.element) {\r\n                // a number means a button index\r\n                case 'number':\r\n                    if (instance.__internal.buttons.length > focus.element) {\r\n                        //in basic view, skip focusing the buttons.\r\n                        if (instance.get('basic') === true) {\r\n                            element = instance.elements.reset[0];\r\n                        } else {\r\n                            element = instance.__internal.buttons[focus.element].element;\r\n                        }\r\n                    }\r\n                    break;\r\n                // a string means querySelector to select from dialog body contents.\r\n                case 'string':\r\n                    element = instance.elements.body.querySelector(focus.element);\r\n                    break;\r\n                // a function should return the focus element.\r\n                case 'function':\r\n                    element = focus.element.call(instance);\r\n                    break;\r\n                }\r\n                \r\n                // if no focus element, default to first reset element.\r\n                if ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0) {\r\n                    element = instance.elements.reset[0];\r\n                }\r\n                // focus\r\n                if (element && element.focus) {\r\n                    element.focus();\r\n                    // if selectable\r\n                    if (focus.select && element.select) {\r\n                        element.select();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function onReset(event, instance) {\r\n\r\n            // should work on last modal if triggered from document.body \r\n            if (!instance) {\r\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\r\n                    if (openDialogs[x].isModal()) {\r\n                        instance = openDialogs[x];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // if modal\r\n            if (instance && instance.isModal()) {\r\n                // determine reset target to enable forward/backward tab cycle.\r\n                var resetTarget, target = event.srcElement || event.target;\r\n                var lastResetElement = target === instance.elements.reset[1] || (instance.__internal.buttons.length === 0 && target === document.body);\r\n\r\n                // if last reset link, then go to maximize or close\r\n                if (lastResetElement) {\r\n                    if (instance.get('maximizable')) {\r\n                        resetTarget = instance.elements.commands.maximize;\r\n                    } else if (instance.get('closable')) {\r\n                        resetTarget = instance.elements.commands.close;\r\n                    }\r\n                }\r\n                // if no reset target found, try finding the best button\r\n                if (resetTarget === undefined) {\r\n                    if (typeof instance.__internal.focus.element === 'number') {\r\n                        // button focus element, go to first available button\r\n                        if (target === instance.elements.reset[0]) {\r\n                            resetTarget = instance.elements.buttons.auxiliary.firstChild || instance.elements.buttons.primary.firstChild;\r\n                        } else if (lastResetElement) {\r\n                            //restart the cycle by going to first reset link\r\n                            resetTarget = instance.elements.reset[0];\r\n                        }\r\n                    } else {\r\n                        // will reach here when tapping backwards, so go to last child\r\n                        // The focus element SHOULD NOT be a button (logically!).\r\n                        if (target === instance.elements.reset[0]) {\r\n                            resetTarget = instance.elements.buttons.primary.lastChild || instance.elements.buttons.auxiliary.lastChild;\r\n                        }\r\n                    }\r\n                }\r\n                // focus\r\n                setFocus(instance, resetTarget);\r\n            }\r\n        }\r\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionInEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerIn);\r\n\r\n            // once transition is complete, set focus\r\n            setFocus(instance);\r\n\r\n            //restore scroll to prevent document jump\r\n            restoreScrollPosition();\r\n\r\n            // allow handling key up after transition ended.\r\n            cancelKeyup = false;\r\n\r\n            // allow custom `onfocus` method\r\n            dispatchEvent('onfocus', instance);\r\n\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            removeClass(instance.elements.root, classes.animationIn);\r\n        }\r\n\r\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionOutEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerOut);\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // reset move updates\r\n            resetMove(instance);\r\n            // reset resize updates\r\n            resetResize(instance);\r\n\r\n            // restore if maximized\r\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\r\n                restore(instance);\r\n            }\r\n\r\n            // return focus to the last active element\r\n            if (alertify.defaults.maintainFocus && instance.__internal.activeElement) {\r\n                instance.__internal.activeElement.focus();\r\n                instance.__internal.activeElement = null;\r\n            }\r\n            \r\n            //destory the instance\r\n            if (typeof instance.__internal.destroy === 'function') {\r\n                instance.__internal.destroy.apply(instance);\r\n            }\r\n        }\r\n        /* Controls moving a dialog around */\r\n        //holde the current moving instance\r\n        var movable = null,\r\n            //holds the current X offset when move starts\r\n            offsetX = 0,\r\n            //holds the current Y offset when move starts\r\n            offsetY = 0,\r\n            xProp = 'pageX',\r\n            yProp = 'pageY',\r\n            bounds = null,\r\n            refreshTop = false,\r\n            moveDelegate = null\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElement(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n           \r\n            element.style.left = left + 'px';\r\n            element.style.top = top + 'px';\r\n           \r\n        }\r\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElementBounded(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n            \r\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\r\n            if(refreshTop){\r\n                element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\r\n            }else{\r\n                element.style.top = Math.max(bounds.minTop, top) + 'px';\r\n            }\r\n        }\r\n            \r\n\r\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginMove(event, instance) {\r\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\r\n                var eventSrc, left=0, top=0;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                    xProp = 'clientX';\r\n                    yProp = 'clientY';\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n\r\n                if (eventSrc) {\r\n\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n\r\n                    if (element.style.left) {\r\n                        left = parseInt(element.style.left, 10);\r\n                    }\r\n\r\n                    if (element.style.top) {\r\n                        top = parseInt(element.style.top, 10);\r\n                    }\r\n                    \r\n                    offsetX = eventSrc[xProp] - left;\r\n                    offsetY = eventSrc[yProp] - top;\r\n\r\n                    if(instance.isModal()){\r\n                        offsetY += instance.elements.modal.scrollTop;\r\n                    }else if(instance.isPinned()){\r\n                        offsetY -= document.body.scrollTop;\r\n                    }\r\n                    \r\n                    if(instance.get('moveBounded')){\r\n                        var current = element,\r\n                            offsetLeft = -left,\r\n                            offsetTop = -top;\r\n                        \r\n                        //calc offset\r\n                        do {\r\n                            offsetLeft += current.offsetLeft;\r\n                            offsetTop += current.offsetTop;\r\n                        } while (current = current.offsetParent);\r\n                        \r\n                        bounds = {\r\n                            maxLeft : offsetLeft,\r\n                            minLeft : -offsetLeft,\r\n                            maxTop  : document.documentElement.clientHeight - element.clientHeight - offsetTop,\r\n                            minTop  : -offsetTop\r\n                        };\r\n                        moveDelegate = moveElementBounded;\r\n                    }else{\r\n                        bounds = null;\r\n                        moveDelegate = moveElement;\r\n                    }\r\n                    \r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', instance);\r\n\r\n                    refreshTop = !instance.isModal() && instance.isPinned();\r\n                    movable = instance;\r\n                    moveDelegate(eventSrc, element);\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function move(event) {\r\n            if (movable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    moveDelegate(eventSrc, movable.elements.dialog);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endMove() {\r\n            if (movable) {\r\n                var instance = movable;\r\n                movable = bounds = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                // allow custom `onmoved` method\r\n                dispatchEvent('onmoved', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetMove(instance) {\r\n            movable = null;\r\n            var element = instance.elements.dialog;\r\n            element.style.left = element.style.top = '';\r\n        }\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMovable(instance) {\r\n            if (instance.get('movable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    bindMovableEvents(instance);\r\n                }\r\n            } else {\r\n\r\n                //reset\r\n                resetMove(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    unbindMovableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Controls moving a dialog around */\r\n        //holde the current instance being resized\t\t\r\n        var resizable = null,\r\n            //holds the staring left offset when resize starts.\r\n            startingLeft = Number.Nan,\r\n            //holds the staring width when resize starts.\r\n            startingWidth = 0,\r\n            //holds the initial width when resized for the first time.\r\n            minWidth = 0,\r\n            //holds the offset of the resize handle.\r\n            handleOffset = 0\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resizeElement(event, element, pageRelative) {\r\n\r\n            //calculate offsets from 0,0\r\n            var current = element;\r\n            var offsetLeft = 0;\r\n            var offsetTop = 0;\r\n            do {\r\n                offsetLeft += current.offsetLeft;\r\n                offsetTop += current.offsetTop;\r\n            } while (current = current.offsetParent);\r\n\r\n            // determine X,Y coordinates.\r\n            var X, Y;\r\n            if (pageRelative === true) {\r\n                X = event.pageX;\r\n                Y = event.pageY;\r\n            } else {\r\n                X = event.clientX;\r\n                Y = event.clientY;\r\n            }\r\n            // rtl handling\r\n            var isRTL = isRightToLeft();\r\n            if (isRTL) {\r\n                // reverse X \r\n                X = document.body.offsetWidth - X;\r\n                // if has a starting left, calculate offsetRight\r\n                if (!isNaN(startingLeft)) {\r\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\r\n                }\r\n            }\r\n\r\n            // set width/height\r\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\r\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\r\n\r\n            // if the element being resized has a starting left, maintain it.\r\n            // the dialog is centered, divide by half the offset to maintain the margins.\r\n            if (!isNaN(startingLeft)) {\r\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\r\n                if (isRTL) {\r\n                    //negate the diff, why?\r\n                    //when growing it should decrease left\r\n                    //when shrinking it should increase left\r\n                    diff *= -1;\r\n                }\r\n                if (element.offsetWidth > startingWidth) {\r\n                    //growing\r\n                    element.style.left = (startingLeft + diff) + 'px';\r\n                } else if (element.offsetWidth >= minWidth) {\r\n                    //shrinking\r\n                    element.style.left = (startingLeft - diff) + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginResize(event, instance) {\r\n            if (!instance.isMaximized()) {\r\n                var eventSrc;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', instance);\r\n                    \r\n                    resizable = instance;\r\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n                    startingLeft = parseInt(element.style.left, 10);\r\n                    element.style.height = element.offsetHeight + 'px';\r\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\r\n\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resize(event) {\r\n            if (resizable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endResize() {\r\n            if (resizable) {\r\n                var instance = resizable;\r\n                resizable = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                cancelClick = true;\r\n                // allow custom `onresized` method\r\n                dispatchEvent('onresized', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetResize(instance) {\r\n            resizable = null;\r\n            var element = instance.elements.dialog;\r\n            if (element.style.maxWidth === 'none') {\r\n                //clear inline styles.\r\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\r\n                //reset variables.\r\n                startingLeft = Number.Nan;\r\n                startingWidth = minWidth = handleOffset = 0;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateResizable(instance) {\r\n            if (instance.get('resizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    bindResizableEvents(instance);\r\n                }\r\n            } else {\r\n                //reset\r\n                resetResize(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    unbindResizableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function windowResize(/*event*/) {\r\n            for (var x = 0; x < openDialogs.length; x += 1) {\r\n                var instance = openDialogs[x];\r\n                if (instance.get('autoReset')) {\r\n                    resetMove(instance);\r\n                    resetResize(instance);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindEvents(instance) {\r\n            // if first dialog, hook global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                on(window, 'resize', windowResize);\r\n                on(document.body, 'keyup', keyupHandler);\r\n                on(document.body, 'keydown', keydownHandler);\r\n                on(document.body, 'focus', onReset);\r\n\r\n                //move\r\n                on(document.documentElement, 'mousemove', move);\r\n                on(document.documentElement, 'touchmove', move);\r\n                on(document.documentElement, 'mouseup', endMove);\r\n                on(document.documentElement, 'touchend', endMove);\r\n                //resize\r\n                on(document.documentElement, 'mousemove', resize);\r\n                on(document.documentElement, 'touchmove', resize);\r\n                on(document.documentElement, 'mouseup', endResize);\r\n                on(document.documentElement, 'touchend', endResize);\r\n            }\r\n\r\n            // common events\r\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            on(instance.elements.reset[0], 'focus', instance.__internal.resetHandler);\r\n            on(instance.elements.reset[1], 'focus', instance.__internal.resetHandler);\r\n\r\n            //prevent handling key up when dialog is being opened by a key stroke.\r\n            cancelKeyup = true;\r\n            // hook in transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                bindModelessEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                bindResizableEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                bindMovableEvents(instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindEvents(instance) {\r\n            // if last dialog, remove global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                off(window, 'resize', windowResize);\r\n                off(document.body, 'keyup', keyupHandler);\r\n                off(document.body, 'keydown', keydownHandler);\r\n                off(document.body, 'focus', onReset);\r\n                //move\r\n                off(document.documentElement, 'mousemove', move);\r\n                off(document.documentElement, 'mouseup', endMove);\r\n                //resize\r\n                off(document.documentElement, 'mousemove', resize);\r\n                off(document.documentElement, 'mouseup', endResize);\r\n            }\r\n\r\n            // common events\r\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            off(instance.elements.reset[0], 'focus', instance.__internal.resetHandler);\r\n            off(instance.elements.reset[1], 'focus', instance.__internal.resetHandler);\r\n\r\n            // hook out transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                unbindModelessEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                unbindMovableEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                unbindResizableEvents(instance);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindModelessEvents(instance) {\r\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindModelessEvents(instance) {\r\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindMovableEvents(instance) {\r\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindMovableEvents(instance) {\r\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindResizableEvents(instance) {\r\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindResizableEvents(instance) {\r\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler);\r\n        }\r\n\r\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindClosableEvents(instance) {\r\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindClosableEvents(instance) {\r\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n        // dialog API\r\n        return {\r\n            __init:initialize,\r\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isOpen: function () {\r\n                return this.__internal.isOpen;\r\n            },\r\n            isModal: function (){\r\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\r\n            },\r\n            isMaximized:function(){\r\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\r\n            },\r\n            isPinned:function(){\r\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\r\n            },\r\n            maximize:function(){\r\n                if(!this.isMaximized()){\r\n                    maximize(this);\r\n                }\r\n                return this;\r\n            },\r\n            restore:function(){\r\n                if(this.isMaximized()){\r\n                    restore(this);\r\n                }\r\n                return this;\r\n            },\r\n            pin:function(){\r\n                if(!this.isPinned()){\r\n                    pin(this);\r\n                }\r\n                return this;\r\n            },\r\n            unpin:function(){\r\n                if(this.isPinned()){\r\n                    unpin(this);\r\n                }\r\n                return this;\r\n            },\r\n            bringToFront:function(){\r\n                bringToFront(null, this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            moveTo:function(x,y){\r\n                if(!isNaN(x) && !isNaN(y)){\r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', this);\r\n                    \r\n                    var element = this.elements.dialog,\r\n                        current = element,\r\n                        offsetLeft = 0,\r\n                        offsetTop = 0;\r\n                    \r\n                    //subtract existing left,top\r\n                    if (element.style.left) {\r\n                        offsetLeft -= parseInt(element.style.left, 10);\r\n                    }\r\n                    if (element.style.top) {\r\n                        offsetTop -= parseInt(element.style.top, 10);\r\n                    }\r\n                    //calc offset\r\n                    do {\r\n                        offsetLeft += current.offsetLeft;\r\n                        offsetTop += current.offsetTop;\r\n                    } while (current = current.offsetParent);\r\n\r\n                    //calc left, top\r\n                    var left = (x - offsetLeft);\r\n                    var top  = (y - offsetTop);\r\n\r\n                    //// rtl handling\r\n                    if (isRightToLeft()) {\r\n                        left *= -1;\r\n                    }\r\n\r\n                    element.style.left = left + 'px';\r\n                    element.style.top = top + 'px';\r\n                    \r\n                    // allow custom `onmoved` method\r\n                    dispatchEvent('onmoved', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            resizeTo:function(width,height){\r\n                var w = parseFloat(width),\r\n                    h = parseFloat(height),\r\n                    regex = /(\\d*\\.\\d+|\\d+)%/\r\n                ;\r\n\r\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\r\n                    \r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', this);\r\n                    \r\n                    if(('' + width).match(regex)){\r\n                        w = w / 100 * document.documentElement.clientWidth ;\r\n                    }\r\n\r\n                    if(('' + height).match(regex)){\r\n                        h = h / 100 * document.documentElement.clientHeight;\r\n                    }\r\n\r\n                    var element = this.elements.dialog;\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = w + 'px';\r\n                    element.style.height = h + 'px';\r\n                    \r\n                    // allow custom `onresized` method\r\n                    dispatchEvent('onresized', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting : function (key, value) {\r\n                var self = this;\r\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\r\n                if(result.op === 'get'){\r\n                    if(result.found){\r\n                        return result.value;\r\n                    }else if(typeof this.settings !== 'undefined'){\r\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\r\n                    }else{\r\n                        return undefined;\r\n                    }\r\n                }else if(result.op === 'set'){\r\n                    if(result.items.length > 0){\r\n                        var callback = this.settingUpdated || function(){};\r\n                        for(var x=0;x<result.items.length;x+=1){\r\n                            var item = result.items[x];\r\n                            if(!item.found && typeof this.settings !== 'undefined'){\r\n                                update(this, this.settings, callback, item.key, item.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set:function(key, value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setHeader:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setContent:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            showModal: function(className){\r\n                return this.show(true, className);\r\n            },\r\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            show: function (modal, className) {\r\n                \r\n                // ensure initialization\r\n                initialize(this);\r\n\r\n                if ( !this.__internal.isOpen ) {\r\n\r\n                    // add to open dialogs\r\n                    this.__internal.isOpen = true;\r\n                    openDialogs.push(this);\r\n\r\n                    // save last focused element\r\n                    if(alertify.defaults.maintainFocus){\r\n                        this.__internal.activeElement = document.activeElement;\r\n                    }\r\n\r\n                    // set tabindex attribute on body element this allows script to give it focusable\r\n                    if(!document.body.hasAttribute('tabindex')) {\r\n                        document.body.setAttribute( 'tabindex', tabindex = '0');\r\n                    }\r\n\r\n                    //allow custom dom manipulation updates before showing the dialog.\r\n                    if(typeof this.prepare === 'function'){\r\n                        this.prepare();\r\n                    }\r\n\r\n                    bindEvents(this);\r\n\r\n                    if(modal !== undefined){\r\n                        this.set('modal', modal);\r\n                    }\r\n\r\n                    //save scroll to prevent document jump\r\n                    saveScrollPosition();\r\n\r\n                    ensureNoOverflow();\r\n\r\n                    // allow custom dialog class on show\r\n                    if(typeof className === 'string' && className !== ''){\r\n                        this.__internal.className = className;\r\n                        addClass(this.elements.root, className);\r\n                    }\r\n\r\n                    // maximize if start maximized\r\n                    if ( this.get('startMaximized')) {\r\n                        this.maximize();\r\n                    }else if(this.isMaximized()){\r\n                        restore(this);\r\n                    }\r\n\r\n                    updateAbsPositionFix(this);\r\n\r\n                    removeClass(this.elements.root, classes.animationOut);\r\n                    addClass(this.elements.root, classes.animationIn);\r\n\r\n                    // set 1s fallback in case transition event doesn't fire\r\n                    clearTimeout( this.__internal.timerIn);\r\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\r\n\r\n                    if(isSafari){\r\n                        // force desktop safari reflow\r\n                        var root = this.elements.root;\r\n                        root.style.display  = 'none';\r\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\r\n                    }\r\n\r\n                    //reflow\r\n                    reflow = this.elements.root.offsetWidth;\r\n                  \r\n                    // show dialog\r\n                    removeClass(this.elements.root, classes.hidden);\r\n\r\n                    // internal on show event\r\n                    if(typeof this.hooks.onshow === 'function'){\r\n                        this.hooks.onshow.call(this);\r\n                    }\r\n\r\n                    // allow custom `onshow` method\r\n                    dispatchEvent('onshow', this);\r\n\r\n                }else{\r\n                    // reset move updates\r\n                    resetMove(this);\r\n                    // reset resize updates\r\n                    resetResize(this);\r\n                    // shake the dialog to indicate its already open\r\n                    addClass(this.elements.dialog, classes.shake);\r\n                    var self = this;\r\n                    setTimeout(function(){\r\n                        removeClass(self.elements.dialog, classes.shake);\r\n                    },200);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */\r\n            close: function () {\r\n                if (this.__internal.isOpen ) {\r\n                    // custom `onclosing` event\r\n                    if(dispatchEvent('onclosing', this) !== false){\r\n\r\n                        unbindEvents(this);\r\n\r\n                        removeClass(this.elements.root, classes.animationIn);\r\n                        addClass(this.elements.root, classes.animationOut);\r\n\r\n                        // set 1s fallback in case transition event doesn't fire\r\n                        clearTimeout( this.__internal.timerOut );\r\n                        this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\r\n                        // hide dialog\r\n                        addClass(this.elements.root, classes.hidden);\r\n                        //reflow\r\n                        reflow = this.elements.modal.offsetWidth;\r\n\r\n                        // remove custom dialog class on hide\r\n                        if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\r\n                            removeClass(this.elements.root, this.__internal.className);\r\n                        }\r\n\r\n                        // internal on close event\r\n                        if(typeof this.hooks.onclose === 'function'){\r\n                            this.hooks.onclose.call(this);\r\n                        }\r\n\r\n                        // allow custom `onclose` method\r\n                        dispatchEvent('onclose', this);\r\n\r\n                        //remove from open dialogs\r\n                        openDialogs.splice(openDialogs.indexOf(this),1);\r\n                        this.__internal.isOpen = false;\r\n\r\n                        ensureNoOverflow();\r\n                    }\r\n\r\n                }\r\n                // last dialog and tab index was set by us, remove it.\r\n                if(!openDialogs.length && tabindex === '0'){\r\n                    document.body.removeAttribute('tabindex')\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeOthers:function(){\r\n                alertify.closeAll(this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            destroy:function(){\r\n                if (this.__internal.isOpen ) {\r\n                    //mark dialog for destruction, this will be called on tranistionOut event.\r\n                    this.__internal.destroy = function(){\r\n                        destruct(this, initialize);\r\n                    };\r\n                    //close the dialog to unbind all events.\r\n                    this.close();\r\n                }else{\r\n                    destruct(this, initialize);\r\n                }\r\n                return this;\r\n            },\r\n        };\r\n\t} () );\r\n    var notifier = (function () {\r\n        var reflow,\r\n            element,\r\n            openInstances = [],\r\n            classes = {\r\n                base: 'alertify-notifier',\r\n                message: 'ajs-message',\r\n                top: 'ajs-top',\r\n                right: 'ajs-right',\r\n                bottom: 'ajs-bottom',\r\n                left: 'ajs-left',\r\n                center: 'ajs-center',\r\n                visible: 'ajs-visible',\r\n                hidden: 'ajs-hidden',\r\n                close: 'ajs-close'\r\n            };\r\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */\r\n        function initialize(instance) {\r\n\r\n            if (!instance.__internal) {\r\n                instance.__internal = {\r\n                    position: alertify.defaults.notifier.position,\r\n                    delay: alertify.defaults.notifier.delay,\r\n                };\r\n\r\n                element = document.createElement('DIV');\r\n\r\n                updatePosition(instance);\r\n            }\r\n\r\n            //add to DOM tree.\r\n            if (element.parentNode !== document.body) {\r\n                document.body.appendChild(element);\r\n            }\r\n        }\r\n\r\n        function pushInstance(instance) {\r\n            instance.__internal.pushed = true;\r\n            openInstances.push(instance);\r\n        }\r\n        function popInstance(instance) {\r\n            openInstances.splice(openInstances.indexOf(instance), 1);\r\n            instance.__internal.pushed = false;\r\n        }\r\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */\r\n        function updatePosition(instance) {\r\n            element.className = classes.base;\r\n            switch (instance.__internal.position) {\r\n            case 'top-right':\r\n                addClass(element, classes.top + ' ' + classes.right);\r\n                break;\r\n            case 'top-left':\r\n                addClass(element, classes.top + ' ' + classes.left);\r\n                break;\r\n            case 'top-center':\r\n                addClass(element, classes.top + ' ' + classes.center);\r\n                break;\r\n            case 'bottom-left':\r\n                addClass(element, classes.bottom + ' ' + classes.left);\r\n                break;\r\n            case 'bottom-center':\r\n                addClass(element, classes.bottom + ' ' + classes.center);\r\n                break;\r\n\r\n            default:\r\n            case 'bottom-right':\r\n                addClass(element, classes.bottom + ' ' + classes.right);\r\n                break;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */\r\n        function create(div, callback) {\r\n\r\n            function clickDelegate(event, instance) {\r\n                if(!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true'){\r\n                    instance.dismiss(true);\r\n                }\r\n            }\r\n\r\n            function transitionDone(event, instance) {\r\n                // unbind event\r\n                off(instance.element, transition.type, transitionDone);\r\n                // remove the message\r\n                element.removeChild(instance.element);\r\n            }\r\n\r\n            function initialize(instance) {\r\n                if (!instance.__internal) {\r\n                    instance.__internal = {\r\n                        pushed: false,\r\n                        delay : undefined,\r\n                        timer: undefined,\r\n                        clickHandler: undefined,\r\n                        transitionEndHandler: undefined,\r\n                        transitionTimeout: undefined\r\n                    };\r\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\r\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\r\n                }\r\n                return instance;\r\n            }\r\n            function clearTimers(instance) {\r\n                clearTimeout(instance.__internal.timer);\r\n                clearTimeout(instance.__internal.transitionTimeout);\r\n            }\r\n            return initialize({\r\n                /* notification DOM element*/\r\n                element: div,\r\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                push: function (_content, _wait) {\r\n                    if (!this.__internal.pushed) {\r\n\r\n                        pushInstance(this);\r\n                        clearTimers(this);\r\n\r\n                        var content, wait;\r\n                        switch (arguments.length) {\r\n                        case 0:\r\n                            wait = this.__internal.delay;\r\n                            break;\r\n                        case 1:\r\n                            if (typeof (_content) === 'number') {\r\n                                wait = _content;\r\n                            } else {\r\n                                content = _content;\r\n                                wait = this.__internal.delay;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            content = _content;\r\n                            wait = _wait;\r\n                            break;\r\n                        }\r\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\r\n                        // set contents\r\n                        if (typeof content !== 'undefined') {\r\n                            this.setContent(content);\r\n                        }\r\n                        // append or insert\r\n                        if (notifier.__internal.position.indexOf('top') < 0) {\r\n                            element.appendChild(this.element);\r\n                        } else {\r\n                            element.insertBefore(this.element, element.firstChild);\r\n                        }\r\n                        reflow = this.element.offsetWidth;\r\n                        addClass(this.element, classes.visible);\r\n                        // attach click event\r\n                        on(this.element, 'click', this.__internal.clickHandler);\r\n                        return this.delay(wait);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */\r\n                ondismiss: function () { },\r\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */\r\n                callback: callback,\r\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */\r\n                dismiss: function (clicked) {\r\n                    if (this.__internal.pushed) {\r\n                        clearTimers(this);\r\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\r\n                            //detach click event\r\n                            off(this.element, 'click', this.__internal.clickHandler);\r\n                            // ensure element exists\r\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\r\n                                //transition end or fallback\r\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\r\n                                removeClass(this.element, classes.visible);\r\n\r\n                                // custom callback on dismiss\r\n                                if (typeof this.callback === 'function') {\r\n                                    this.callback.call(this, clicked);\r\n                                }\r\n                            }\r\n                            popInstance(this);\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                delay: function (wait) {\r\n                    clearTimers(this);\r\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\r\n                    if (this.__internal.delay > 0) {\r\n                        var  self = this;\r\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */\r\n                setContent: function (content) {\r\n                    if (typeof content === 'string') {\r\n                        clearContents(this.element);\r\n                        this.element.innerHTML = content;\r\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\r\n                        clearContents(this.element);\r\n                        this.element.appendChild(content);\r\n                    }\r\n                    if(this.__internal.closeButton){\r\n                        var close = document.createElement('span');\r\n                        addClass(close, classes.close);\r\n                        close.setAttribute('data-close', true);\r\n                        this.element.appendChild(close);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */\r\n                dismissOthers: function () {\r\n                    notifier.dismissAll(this);\r\n                    return this;\r\n                }\r\n            });\r\n        }\r\n\r\n        //notifier api\r\n        return {\r\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */\r\n            setting: function (key, value) {\r\n                //ensure init\r\n                initialize(this);\r\n\r\n                if (typeof value === 'undefined') {\r\n                    //get\r\n                    return this.__internal[key];\r\n                } else {\r\n                    //set\r\n                    switch (key) {\r\n                    case 'position':\r\n                        this.__internal.position = value;\r\n                        updatePosition(this);\r\n                        break;\r\n                    case 'delay':\r\n                        this.__internal.delay = value;\r\n                        break;\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */\r\n            set:function(key,value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            create: function (type, callback) {\r\n                //ensure notifier init\r\n                initialize(this);\r\n                //create new notification message\r\n                var div = document.createElement('div');\r\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ajs-' + type : '');\r\n                return create(div, callback);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */\r\n            dismissAll: function (except) {\r\n                var clone = openInstances.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var  instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    function Alertify() {\r\n\r\n        // holds a references of created dialogs\r\n        var dialogs = {};\r\n\r\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */\r\n        function extend(sub, base) {\r\n            // copy dialog pototype over definition.\r\n            for (var prop in base) {\r\n                if (base.hasOwnProperty(prop)) {\r\n                    sub[prop] = base[prop];\r\n                }\r\n            }\r\n            return sub;\r\n        }\r\n\r\n\r\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */\r\n        function get_dialog(name) {\r\n            var dialog = dialogs[name].dialog;\r\n            //initialize the dialog if its not already initialized.\r\n            if (dialog && typeof dialog.__init === 'function') {\r\n                dialog.__init(dialog);\r\n            }\r\n            return dialog;\r\n        }\r\n\r\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */\r\n        function register(name, Factory, transient, base) {\r\n            var definition = {\r\n                dialog: null,\r\n                factory: Factory\r\n            };\r\n\r\n            //if this is based on an existing dialog, create a new definition\r\n            //by applying the new protoype over the existing one.\r\n            if (base !== undefined) {\r\n                definition.factory = function () {\r\n                    return extend(new dialogs[base].factory(), new Factory());\r\n                };\r\n            }\r\n\r\n            if (!transient) {\r\n                //create a new definition based on dialog\r\n                definition.dialog = extend(new definition.factory(), dialog);\r\n            }\r\n            return dialogs[name] = definition;\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */\r\n            defaults: defaults,\r\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */\r\n            dialog: function (name, Factory, transient, base) {\r\n\r\n                // get request, create a new instance and return it.\r\n                if (typeof Factory !== 'function') {\r\n                    return get_dialog(name);\r\n                }\r\n\r\n                if (this.hasOwnProperty(name)) {\r\n                    throw new Error('alertify.dialog: name already exists');\r\n                }\r\n\r\n                // register the dialog\r\n                var definition = register(name, Factory, transient, base);\r\n\r\n                if (transient) {\r\n\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var instance = extend(new definition.factory(), dialog);\r\n                            //ensure init\r\n                            if (instance && typeof instance.__init === 'function') {\r\n                                instance.__init(instance);\r\n                            }\r\n                            instance['main'].apply(instance, arguments);\r\n                            return instance['show'].apply(instance);\r\n                        }\r\n                    };\r\n                } else {\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //ensure init\r\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\r\n                            definition.dialog.__init(definition.dialog);\r\n                        }\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var dialog = definition.dialog;\r\n                            dialog['main'].apply(definition.dialog, arguments);\r\n                            return dialog['show'].apply(definition.dialog);\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeAll: function (except) {\r\n                var clone = openDialogs.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.close();\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting: function (name, key, value) {\r\n\r\n                if (name === 'notifier') {\r\n                    return notifier.setting(key, value);\r\n                }\r\n\r\n                var dialog = get_dialog(name);\r\n                if (dialog) {\r\n                    return dialog.setting(key, value);\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set: function(name,key,value){\r\n                return this.setting(name, key,value);\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get: function(name, key){\r\n                return this.setting(name, key);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            notify: function (message, type, wait, callback) {\r\n                return notifier.create(type, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            message: function (message, wait, callback) {\r\n                return notifier.create(null, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            success: function (message, wait, callback) {\r\n                return notifier.create('success', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            error: function (message, wait, callback) {\r\n                return notifier.create('error', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            warning: function (message, wait, callback) {\r\n                return notifier.create('warning', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            dismissAll: function () {\r\n                notifier.dismissAll();\r\n            }\r\n        };\r\n    }\r\n    var alertify = new Alertify();\r\n\r\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */\r\n    alertify.dialog('alert', function () {\r\n        return {\r\n            main: function (_title, _message, _onok) {\r\n                var title, message, onok;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    if (typeof _message === 'function') {\r\n                        message = _title;\r\n                        onok = _message;\r\n                    } else {\r\n                        title = _title;\r\n                        message = _message;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.ok,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                // nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                onok: undefined,\r\n                label: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'label':\r\n                    if (this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue;\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                if (typeof this.get('onok') === 'function') {\r\n                    var returnValue = this.get('onok').call(this, closeEvent);\r\n                    if (typeof returnValue !== 'undefined') {\r\n                        closeEvent.cancel = !returnValue;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */\r\n    alertify.dialog('confirm', function () {\r\n\r\n        var autoConfirm = {\r\n            timer: null,\r\n            index: null,\r\n            text: null,\r\n            duration: null,\r\n            task: function (event, self) {\r\n                if (self.isOpen()) {\r\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\r\n                    autoConfirm.duration -= 1;\r\n                    if (autoConfirm.duration === -1) {\r\n                        clearAutoConfirm(self);\r\n                        var button = self.__internal.buttons[autoConfirm.index];\r\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\r\n\r\n                        if (typeof self.callback === 'function') {\r\n                            self.callback.apply(self, [closeEvent]);\r\n                        }\r\n                        //close the dialog.\r\n                        if (closeEvent.close !== false) {\r\n                            self.close();\r\n                        }\r\n                    }\r\n                } else {\r\n                    clearAutoConfirm(self);\r\n                }\r\n            }\r\n        };\r\n\r\n        function clearAutoConfirm(self) {\r\n            if (autoConfirm.timer !== null) {\r\n                clearInterval(autoConfirm.timer);\r\n                autoConfirm.timer = null;\r\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\r\n            }\r\n        }\r\n\r\n        function startAutoConfirm(self, index, duration) {\r\n            clearAutoConfirm(self);\r\n            autoConfirm.duration = duration;\r\n            autoConfirm.index = index;\r\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\r\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\r\n            autoConfirm.task(null, self);\r\n        }\r\n\r\n\r\n        return {\r\n            main: function (_title, _message, _onok, _oncancel) {\r\n                var title, message, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 4:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                //nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: null,\r\n                labels: null,\r\n                onok: null,\r\n                oncancel: null,\r\n                defaultFocus: null,\r\n                reverseButtons: null,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'labels':\r\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].text = newValue.ok;\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].text = newValue.cancel;\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                case 'defaultFocus':\r\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                clearAutoConfirm(this);\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            autoOk: function (duration) {\r\n                startAutoConfirm(this, 0, duration);\r\n                return this;\r\n            },\r\n            autoCancel: function (duration) {\r\n                startAutoConfirm(this, 1, duration);\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */\r\n    alertify.dialog('prompt', function () {\r\n        var input = document.createElement('INPUT');\r\n        var p = document.createElement('P');\r\n        return {\r\n            main: function (_title, _message, _value, _onok, _oncancel) {\r\n                var title, message, value, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    value = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    break;\r\n                case 4:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 5:\r\n                    title = _title;\r\n                    message = _message;\r\n                    value = _value;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('value', value);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: input,\r\n                        select: true\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                input.className = alertify.defaults.theme.input;\r\n                input.setAttribute('type', 'text');\r\n                input.value = this.get('value');\r\n                this.elements.content.appendChild(p);\r\n                this.elements.content.appendChild(input);\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                if (typeof message === 'string') {\r\n                    clearContents(p);\r\n                    p.innerHTML = message;\r\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\r\n                    clearContents(p);\r\n                    p.appendChild(message);\r\n                }\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                labels: undefined,\r\n                onok: undefined,\r\n                oncancel: undefined,\r\n                value: '',\r\n                type:'text',\r\n                reverseButtons: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'value':\r\n                    input.value = newValue;\r\n                    break;\r\n                case 'type':\r\n                    switch (newValue) {\r\n                    case 'text':\r\n                    case 'color':\r\n                    case 'date':\r\n                    case 'datetime-local':\r\n                    case 'email':\r\n                    case 'month':\r\n                    case 'number':\r\n                    case 'password':\r\n                    case 'search':\r\n                    case 'tel':\r\n                    case 'time':\r\n                    case 'week':\r\n                        input.type = newValue;\r\n                        break;\r\n                    default:\r\n                        input.type = 'text';\r\n                        break;\r\n                    }\r\n                    break;\r\n                case 'labels':\r\n                    if (newValue.ok && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    this.settings.value = input.value;\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    if(!closeEvent.cancel){\r\n                        input.value = this.settings.value;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    // CommonJS\r\n    if ( typeof module === 'object' && typeof module.exports === 'object' ) {\r\n        module.exports = alertify;\r\n    // AMD\r\n    } else if ( typeof define === 'function' && define.amd) {\r\n        define( [], function () {\r\n            return alertify;\r\n        } );\r\n    // window\r\n    } else if ( !window.alertify ) {\r\n        window.alertify = alertify;\r\n    }\r\n\r\n} ( typeof window !== 'undefined' ? window : this ) );\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/alertifyjs/build/alertify.js\n// module id = YeVB\n// module chunks = 1"],"sourceRoot":""}